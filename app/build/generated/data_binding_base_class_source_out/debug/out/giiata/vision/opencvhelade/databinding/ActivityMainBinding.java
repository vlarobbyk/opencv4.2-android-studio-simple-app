// Generated by view binder compiler. Do not edit!
package giiata.vision.opencvhelade.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import giiata.vision.opencvhelade.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView HMin;

  @NonNull
  public final TextView SMin;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final SeekBar sbHMax;

  @NonNull
  public final SeekBar sbHMin;

  @NonNull
  public final SeekBar sbSMax;

  @NonNull
  public final SeekBar sbSMin;

  @NonNull
  public final SeekBar sbVMax;

  @NonNull
  public final SeekBar sbVMin;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView HMin,
      @NonNull TextView SMin, @NonNull ImageView imageView, @NonNull ImageView imageView2,
      @NonNull SeekBar sbHMax, @NonNull SeekBar sbHMin, @NonNull SeekBar sbSMax,
      @NonNull SeekBar sbSMin, @NonNull SeekBar sbVMax, @NonNull SeekBar sbVMin,
      @NonNull TextView textView3, @NonNull TextView textView4, @NonNull TextView textView5,
      @NonNull TextView textView6) {
    this.rootView = rootView;
    this.HMin = HMin;
    this.SMin = SMin;
    this.imageView = imageView;
    this.imageView2 = imageView2;
    this.sbHMax = sbHMax;
    this.sbHMin = sbHMin;
    this.sbSMax = sbSMax;
    this.sbSMin = sbSMin;
    this.sbVMax = sbVMax;
    this.sbVMin = sbVMin;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HMin;
      TextView HMin = ViewBindings.findChildViewById(rootView, id);
      if (HMin == null) {
        break missingId;
      }

      id = R.id.SMin;
      TextView SMin = ViewBindings.findChildViewById(rootView, id);
      if (SMin == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.sbHMax;
      SeekBar sbHMax = ViewBindings.findChildViewById(rootView, id);
      if (sbHMax == null) {
        break missingId;
      }

      id = R.id.sbHMin;
      SeekBar sbHMin = ViewBindings.findChildViewById(rootView, id);
      if (sbHMin == null) {
        break missingId;
      }

      id = R.id.sbSMax;
      SeekBar sbSMax = ViewBindings.findChildViewById(rootView, id);
      if (sbSMax == null) {
        break missingId;
      }

      id = R.id.sbSMin;
      SeekBar sbSMin = ViewBindings.findChildViewById(rootView, id);
      if (sbSMin == null) {
        break missingId;
      }

      id = R.id.sbVMax;
      SeekBar sbVMax = ViewBindings.findChildViewById(rootView, id);
      if (sbVMax == null) {
        break missingId;
      }

      id = R.id.sbVMin;
      SeekBar sbVMin = ViewBindings.findChildViewById(rootView, id);
      if (sbVMin == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, HMin, SMin, imageView, imageView2,
          sbHMax, sbHMin, sbSMax, sbSMin, sbVMax, sbVMin, textView3, textView4, textView5,
          textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
